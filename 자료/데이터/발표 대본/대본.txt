안녕하세요 졸업가능팀에서 발표를 맡게 된 배성규입니다.

(페이지 넘김)

저희가 선정한 주제로는 졸업 요건 조회 사이트입니다.

(페이지 넘김)

현재 학교에서 졸업요건을 확인하려면 사진과 같이 셀프테스트를 작성해 학과 사무실에 제출해야 하는 복잡한 과정을 거쳐야 합니다.
게다가 셀프테스트는 졸업 예정자인 학우들만 결과를 확인할 수 있고,
아직 졸업 예정자가 아닌 학우들은 부족한 졸업요건을 정확하게 파악하기 어렵습니다.
저희는 이러한 불편함을 해결하고자 이 주제를 선정하였습니다.

(페이지 넘김)

현재 시행되고 있는 졸업사정 셀프 테스트의 문제점으로는
- 시스템 자동화가 되어있지 않아서 학생이 일일이 조건을 찾고 작성해야 하고 수기 작성으로 인한 정확도 문제가 있습니다.
- 또, 조교에게 확인을 받아야 하기 때문에 결과를 바로 확인하기 어렵고 결과를 받아도 한눈에 파악하기 어렵다는 단점이 있습니다.
- 타 대학들은 어떤 방식으로 졸업요건을 확인하는지 조사한 결과, 대부분의 학교에서도 학생이 수기로 작성하거나 비교하여 확인하는 방식을 사용하고 있습니다.

(페이지 넘김)

졸업요건 조회 서비스를 제공하는 타 대학 졸업요건 조회 시스템 예시입니다.
예시 사진 속 대학교의 경우, 이수한 학점은 보여주지만, 수강한 과목이 출력되지 않아 미이수 과목을 학생이 직접 찾아봐야 한다는 불편함이 있습니다.

(페이지 넘김)

기존 시스템과의 차별성과 기대효과로는
- 먼저, 학생이 일일이 이수학점이나 과목을 수기로 작성할 필요 없이, 학업성적 PDF 파일만 업로드하면 졸업 가능 여부와 함께 부족한 필수 과목이 무엇인지를 바로 확인할 수 있습니다.
- 수기작성이 아닌 PDF를 이용하기 때문에 정확도가 높을 뿐만 아니라 직관적인 UI를 구현하여 조회 결과를 기존과 다르게 쉽게 파악할 수 있습니다.
- 졸업 예정자인 학우는 졸업 가능 여부와 부족한 요건을, 졸업 예정자가 아닌 학우에게는 졸업하기 위해 필요한 요건을 보여주여 학년과 졸업 예정자 조건에 상관없이 시스템을 이용할 수 있습니다.
- 마지막으로 학과별로 많이 들은 교양을 제공하여 학생이 따로 찾아보지 않아도 인기 교양을 추천 받을 수 있는 기능을 추가 구현할 예정입니다.
저희는 '졸업가능'의 시스템 자동화를 통해 정확한 결과 도출과 시간 절약 효과를 기대합니다.

(페이지 넘김)

다음은 저희가 프로젝트를 진행하며 사용할 개발 환경입니다.
프론트엔드로는 리액트, 백엔드로는 스프링부트를 이용하여 구현할 예정이며 마리아 디비를 사용하여 데이터베이스를 구축하고 서버는 AWS를 사용할 예정입니다. 그리고 이 과정에서 형상관리는 깃허브를 이용할 예정입니다.

(페이지 넘김)

저희 프로젝트에서 중요한 기능 중 하나가 PDF를 읽어 오는 기능이라고 생각합니다.
그래서 PDF BOX 라이브러리를 이용하여 PDF에 있는 데이터들을 읽어 오는 것을 테스트 했으며, 이를 토대로 프로젝트를 진행할 예정입니다. 

(페이지 넘김)

마지막으로 UI 예시입니다.
현재 팀원들과 상의하여 다음과 같이 간단하게 UI를 구상하였으며 이것을 베이스로 추가되는 기능이 있거나 수정 사항이 있으면 그에 맞게 구현할 예정입니다.

(페이지 넘김 - 마지막 페이지)

지금까지 졸업가능팀이었습니다. 감사합니다
